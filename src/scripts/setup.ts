// scripts/setup.ts
import { execSync } from 'child_process'
import fs from 'fs'

const setup = () => {
  try {
    // Criar pastas se n√£o existirem
    if (!fs.existsSync('ptau')) fs.mkdirSync('ptau')
    if (!fs.existsSync('zkey')) fs.mkdirSync('zkey')
    if (!fs.existsSync('proofs')) fs.mkdirSync('proofs')

    // Compilar circuito apenas se ainda n√£o existir
    if (!fs.existsSync('circuits/reveal.r1cs')) {
      console.log('üîß Compilando circuito...')
      execSync('circom circuits/reveal.circom --r1cs --wasm --sym -o circuits -l node_modules')
    } else {
      console.log('‚úÖ circuits/reveal.r1cs j√° existe. Pulando compila√ß√£o do circuito...')
    }

    // Etapa 1: Gerar Powers of Tau inicial
    if (!fs.existsSync('ptau/pot12_0000.ptau')) {
      console.log('‚ö° Gerando arquivo Powers of Tau inicial...')
      execSync('npx snarkjs powersoftau new bn128 12 ptau/pot12_0000.ptau -v')
    } else {
      console.log('‚úÖ ptau/pot12_0000.ptau j√° existe. Pulando...')
    }

    // Etapa 2: Contribuir
    if (!fs.existsSync('ptau/pot12_final.ptau')) {
      console.log('ü§ù Contribuindo para Powers of Tau...')
      execSync(
        'npx snarkjs powersoftau contribute ptau/pot12_0000.ptau ptau/pot12_final.ptau --name="Contribui√ß√£o local" -v',
        { input: Buffer.from('entropia-qualquer\n') }
      )
    } else {
      console.log('‚úÖ ptau/pot12_final.ptau j√° existe. Pulando...')
    }

    // Etapa 3: Preparar para fase 2
    if (!fs.existsSync('ptau/pot12_final_prep.ptau')) {
      console.log('üß† Preparando arquivo ptau para fase 2...')
      execSync('npx snarkjs powersoftau prepare phase2 ptau/pot12_final.ptau ptau/pot12_final_prep.ptau')
    } else {
      console.log('‚úÖ ptau/pot12_final_prep.ptau j√° existe. Pulando...')
    }

    // Etapa 4: Setup Groth16
    if (!fs.existsSync('zkey/circuit_final.zkey')) {
      console.log('‚öôÔ∏è Gerando proving key com arquivo preparado...')
      execSync('npx snarkjs groth16 setup circuits/reveal.r1cs ptau/pot12_final_prep.ptau zkey/circuit_final.zkey')
    } else {
      console.log('‚úÖ zkey/circuit_final.zkey j√° existe. Pulando...')
    }

    // Etapa 5: Exportar chave de verifica√ß√£o
    if (!fs.existsSync('proofs/verification_key.json')) {
      console.log('üîë Exportando chave de verifica√ß√£o...')
      execSync('npx snarkjs zkey export verificationkey zkey/circuit_final.zkey proofs/verification_key.json')
    } else {
      console.log('‚úÖ proofs/verification_key.json j√° existe. Pulando...')
    }

    console.log('üéâ Setup completo com sucesso.')
  } catch (error) {
    console.error('‚ùå Erro durante o setup:', error)
  }
}

setup()
